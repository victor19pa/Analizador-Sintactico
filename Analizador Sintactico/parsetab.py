
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIFFORTOTHENELSErightIDASIGNARleftNOIGUALMENORQMENORIGUALQMAYORQMAYORIGUALQleftSUMARESTAleftMULTIPLICADODIVIDIDOleftIPARENTDPARENTleftICORDCORrightURESTAASIGNAR COMA CONCAT DCOR DECIMAL DIVIDIDO DLLAVE DPARENT ELSE ENTERO FOR ICOR ID IF IGUAL ILLAVE IMP IPARENT MAYORIGUALQ MAYORQ MENORIGUALQ MENORQ MULTIPLICADO NOIGUAL PUNTOCOMA RESTA STR SUMA THEN TOprograma : listaSentenciaslistaSentencias : sentencialistaSentencias : listaSentencias sentenciasentencia : IMP IPARENT expresion DPARENTsentencia : ID ASIGNAR expresionsentencia : FOR sentencia TO expresion THEN ILLAVE listaSentencias DLLAVEsentencia : IF condicion THEN ILLAVE listaSentencias DLLAVE ELSE ILLAVE listaSentencias DLLAVEexpresion : term\n        expresion : expresion SUMA expresion\n                  | expresion RESTA expresion\n                  | expresion MULTIPLICADO expresion\n                  | expresion DIVIDIDO expresion\n        expresion : term concatenar termconcatenar : CONCATcondicion : expresion relacion expresionrelacion : ASIGNARrelacion : NOIGUALrelacion : MENORQrelacion : MAYORQrelacion : MENORIGUALQrelacion : MAYORIGUALQrelacion : IGUALterm : factorterm : IPARENT expresion DPARENTterm : ICOR expresion DCORfactor : IDfactor : RESTA ENTERO %prec URESTA\n\t\t\t  | RESTA DECIMAL %prec URESTA\n\t\t\t  | ENTERO\n\t\t\t  | DECIMALfactor : STRfactor : emptyempty :'
    
_lr_action_items = {'IMP':([0,2,3,6,8,10,14,16,19,20,21,22,23,25,29,30,31,32,40,41,42,43,46,48,50,51,52,53,54,55,56,58,59,61,63,64,65,66,],[4,4,-2,4,-3,-33,-8,-23,-26,-29,-30,-31,-32,-5,-33,-33,-33,-33,-33,-14,-27,-28,-4,4,-9,-10,-11,-12,-13,-24,-25,4,4,4,-6,4,4,-7,]),'ID':([0,2,3,6,7,8,9,10,14,16,17,18,19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,48,50,51,52,53,54,55,56,58,59,61,63,64,65,66,],[5,5,-2,5,19,-3,19,19,-8,-23,19,19,-26,-29,-30,-31,-32,-5,19,19,19,19,19,19,-16,-17,-18,-19,-20,-21,-22,19,-14,-27,-28,-4,5,-9,-10,-11,-12,-13,-24,-25,5,5,5,-6,5,5,-7,]),'FOR':([0,2,3,6,8,10,14,16,19,20,21,22,23,25,29,30,31,32,40,41,42,43,46,48,50,51,52,53,54,55,56,58,59,61,63,64,65,66,],[6,6,-2,6,-3,-33,-8,-23,-26,-29,-30,-31,-32,-5,-33,-33,-33,-33,-33,-14,-27,-28,-4,6,-9,-10,-11,-12,-13,-24,-25,6,6,6,-6,6,6,-7,]),'IF':([0,2,3,6,8,10,14,16,19,20,21,22,23,25,29,30,31,32,40,41,42,43,46,48,50,51,52,53,54,55,56,58,59,61,63,64,65,66,],[7,7,-2,7,-3,-33,-8,-23,-26,-29,-30,-31,-32,-5,-33,-33,-33,-33,-33,-14,-27,-28,-4,7,-9,-10,-11,-12,-13,-24,-25,7,7,7,-6,7,7,-7,]),'$end':([1,2,3,8,10,14,16,19,20,21,22,23,25,29,30,31,32,40,41,42,43,46,50,51,52,53,54,55,56,63,66,],[0,-1,-2,-3,-33,-8,-23,-26,-29,-30,-31,-32,-5,-33,-33,-33,-33,-33,-14,-27,-28,-4,-9,-10,-11,-12,-13,-24,-25,-6,-7,]),'DLLAVE':([3,8,10,14,16,19,20,21,22,23,25,29,30,31,32,40,41,42,43,46,50,51,52,53,54,55,56,58,61,63,65,66,],[-2,-3,-33,-8,-23,-26,-29,-30,-31,-32,-5,-33,-33,-33,-33,-33,-14,-27,-28,-4,-9,-10,-11,-12,-13,-24,-25,60,63,-6,66,-7,]),'IPARENT':([4,7,9,10,17,18,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,],[9,17,17,17,17,17,17,17,17,17,17,17,-16,-17,-18,-19,-20,-21,-22,17,-14,]),'ASIGNAR':([5,7,13,14,16,19,20,21,22,23,29,30,31,32,40,41,42,43,50,51,52,53,54,55,56,],[10,-33,33,-8,-23,-26,-29,-30,-31,-32,-33,-33,-33,-33,-33,-14,-27,-28,-9,-10,-11,-12,-13,-24,-25,]),'ICOR':([7,9,10,17,18,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,],[18,18,18,18,18,18,18,18,18,18,18,-16,-17,-18,-19,-20,-21,-22,18,-14,]),'RESTA':([7,9,10,13,14,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,],[15,15,15,30,-8,-23,15,15,-26,-29,-30,-31,-32,30,30,15,15,15,15,15,15,-16,-17,-18,-19,-20,-21,-22,15,-14,-27,-28,30,30,30,30,-9,-10,-11,-12,-13,-24,-25,]),'ENTERO':([7,9,10,15,17,18,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,],[20,20,20,42,20,20,20,20,20,20,20,20,-16,-17,-18,-19,-20,-21,-22,20,-14,]),'DECIMAL':([7,9,10,15,17,18,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,],[21,21,21,43,21,21,21,21,21,21,21,21,-16,-17,-18,-19,-20,-21,-22,21,-14,]),'STR':([7,9,10,17,18,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,],[22,22,22,22,22,22,22,22,22,22,22,-16,-17,-18,-19,-20,-21,-22,22,-14,]),'CONCAT':([7,9,10,14,16,17,18,19,20,21,22,23,26,28,29,30,31,32,33,34,35,36,37,38,39,42,43,55,56,],[-33,-33,-33,41,-23,-33,-33,-26,-29,-30,-31,-32,-33,-33,-33,-33,-33,-33,-16,-17,-18,-19,-20,-21,-22,-27,-28,-24,-25,]),'SUMA':([7,9,10,13,14,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,],[-33,-33,-33,29,-8,-23,-33,-33,-26,-29,-30,-31,-32,29,29,-33,-33,-33,-33,-33,-33,-16,-17,-18,-19,-20,-21,-22,-33,-14,-27,-28,29,29,29,29,-9,-10,-11,-12,-13,-24,-25,]),'MULTIPLICADO':([7,9,10,13,14,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,],[-33,-33,-33,31,-8,-23,-33,-33,-26,-29,-30,-31,-32,31,31,-33,-33,-33,-33,-33,-33,-16,-17,-18,-19,-20,-21,-22,-33,-14,-27,-28,31,31,31,31,31,31,-11,-12,-13,-24,-25,]),'DIVIDIDO':([7,9,10,13,14,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,],[-33,-33,-33,32,-8,-23,-33,-33,-26,-29,-30,-31,-32,32,32,-33,-33,-33,-33,-33,-33,-16,-17,-18,-19,-20,-21,-22,-33,-14,-27,-28,32,32,32,32,32,32,-11,-12,-13,-24,-25,]),'NOIGUAL':([7,13,14,16,19,20,21,22,23,29,30,31,32,40,41,42,43,50,51,52,53,54,55,56,],[-33,34,-8,-23,-26,-29,-30,-31,-32,-33,-33,-33,-33,-33,-14,-27,-28,-9,-10,-11,-12,-13,-24,-25,]),'MENORQ':([7,13,14,16,19,20,21,22,23,29,30,31,32,40,41,42,43,50,51,52,53,54,55,56,],[-33,35,-8,-23,-26,-29,-30,-31,-32,-33,-33,-33,-33,-33,-14,-27,-28,-9,-10,-11,-12,-13,-24,-25,]),'MAYORQ':([7,13,14,16,19,20,21,22,23,29,30,31,32,40,41,42,43,50,51,52,53,54,55,56,],[-33,36,-8,-23,-26,-29,-30,-31,-32,-33,-33,-33,-33,-33,-14,-27,-28,-9,-10,-11,-12,-13,-24,-25,]),'MENORIGUALQ':([7,13,14,16,19,20,21,22,23,29,30,31,32,40,41,42,43,50,51,52,53,54,55,56,],[-33,37,-8,-23,-26,-29,-30,-31,-32,-33,-33,-33,-33,-33,-14,-27,-28,-9,-10,-11,-12,-13,-24,-25,]),'MAYORIGUALQ':([7,13,14,16,19,20,21,22,23,29,30,31,32,40,41,42,43,50,51,52,53,54,55,56,],[-33,38,-8,-23,-26,-29,-30,-31,-32,-33,-33,-33,-33,-33,-14,-27,-28,-9,-10,-11,-12,-13,-24,-25,]),'IGUAL':([7,13,14,16,19,20,21,22,23,29,30,31,32,40,41,42,43,50,51,52,53,54,55,56,],[-33,39,-8,-23,-26,-29,-30,-31,-32,-33,-33,-33,-33,-33,-14,-27,-28,-9,-10,-11,-12,-13,-24,-25,]),'DPARENT':([9,14,16,17,19,20,21,22,23,24,29,30,31,32,40,41,42,43,44,50,51,52,53,54,55,56,],[-33,-8,-23,-33,-26,-29,-30,-31,-32,46,-33,-33,-33,-33,-33,-14,-27,-28,55,-9,-10,-11,-12,-13,-24,-25,]),'TO':([10,11,14,16,19,20,21,22,23,25,29,30,31,32,40,41,42,43,46,50,51,52,53,54,55,56,63,66,],[-33,26,-8,-23,-26,-29,-30,-31,-32,-5,-33,-33,-33,-33,-33,-14,-27,-28,-4,-9,-10,-11,-12,-13,-24,-25,-6,-7,]),'THEN':([12,14,16,19,20,21,22,23,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,49,50,51,52,53,54,55,56,],[27,-8,-23,-26,-29,-30,-31,-32,-33,-33,-33,-33,-33,-33,-16,-17,-18,-19,-20,-21,-22,-33,-14,-27,-28,57,-15,-9,-10,-11,-12,-13,-24,-25,]),'DCOR':([14,16,18,19,20,21,22,23,29,30,31,32,40,41,42,43,45,50,51,52,53,54,55,56,],[-8,-23,-33,-26,-29,-30,-31,-32,-33,-33,-33,-33,-33,-14,-27,-28,56,-9,-10,-11,-12,-13,-24,-25,]),'ILLAVE':([27,57,62,],[48,59,64,]),'ELSE':([60,],[62,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'listaSentencias':([0,48,59,64,],[2,58,61,65,]),'sentencia':([0,2,6,48,58,59,61,64,65,],[3,8,11,3,8,3,8,3,8,]),'condicion':([7,],[12,]),'expresion':([7,9,10,17,18,26,28,29,30,31,32,],[13,24,25,44,45,47,49,50,51,52,53,]),'term':([7,9,10,17,18,26,28,29,30,31,32,40,],[14,14,14,14,14,14,14,14,14,14,14,54,]),'factor':([7,9,10,17,18,26,28,29,30,31,32,40,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'empty':([7,9,10,17,18,26,28,29,30,31,32,40,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'relacion':([13,],[28,]),'concatenar':([14,],[40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> listaSentencias','programa',1,'p_programa','analizadorSintactico.py',21),
  ('listaSentencias -> sentencia','listaSentencias',1,'p_lista_sentencias1','analizadorSintactico.py',27),
  ('listaSentencias -> listaSentencias sentencia','listaSentencias',2,'p_lista_sentencias2','analizadorSintactico.py',31),
  ('sentencia -> IMP IPARENT expresion DPARENT','sentencia',4,'p_imprimir','analizadorSintactico.py',37),
  ('sentencia -> ID ASIGNAR expresion','sentencia',3,'p_asig_var','analizadorSintactico.py',41),
  ('sentencia -> FOR sentencia TO expresion THEN ILLAVE listaSentencias DLLAVE','sentencia',8,'p_sent_for','analizadorSintactico.py',45),
  ('sentencia -> IF condicion THEN ILLAVE listaSentencias DLLAVE ELSE ILLAVE listaSentencias DLLAVE','sentencia',10,'p_sent_if','analizadorSintactico.py',49),
  ('expresion -> term','expresion',1,'p_expresion1','analizadorSintactico.py',54),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion5','analizadorSintactico.py',59),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion5','analizadorSintactico.py',60),
  ('expresion -> expresion MULTIPLICADO expresion','expresion',3,'p_expresion5','analizadorSintactico.py',61),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion5','analizadorSintactico.py',62),
  ('expresion -> term concatenar term','expresion',3,'p_expresion4','analizadorSintactico.py',75),
  ('concatenar -> CONCAT','concatenar',1,'p_concatenar','analizadorSintactico.py',81),
  ('condicion -> expresion relacion expresion','condicion',3,'p_condicion','analizadorSintactico.py',86),
  ('relacion -> ASIGNAR','relacion',1,'p_relacion1','analizadorSintactico.py',95),
  ('relacion -> NOIGUAL','relacion',1,'p_relacion2','analizadorSintactico.py',99),
  ('relacion -> MENORQ','relacion',1,'p_relacion3','analizadorSintactico.py',103),
  ('relacion -> MAYORQ','relacion',1,'p_relacion4','analizadorSintactico.py',107),
  ('relacion -> MENORIGUALQ','relacion',1,'p_relacion5','analizadorSintactico.py',111),
  ('relacion -> MAYORIGUALQ','relacion',1,'p_relacion6','analizadorSintactico.py',115),
  ('relacion -> IGUAL','relacion',1,'p_relacion7','analizadorSintactico.py',119),
  ('term -> factor','term',1,'p_term1','analizadorSintactico.py',126),
  ('term -> IPARENT expresion DPARENT','term',3,'p_term4','analizadorSintactico.py',130),
  ('term -> ICOR expresion DCOR','term',3,'p_term7','analizadorSintactico.py',134),
  ('factor -> ID','factor',1,'p_factor1','analizadorSintactico.py',141),
  ('factor -> RESTA ENTERO','factor',2,'p_factor2','analizadorSintactico.py',146),
  ('factor -> RESTA DECIMAL','factor',2,'p_factor2','analizadorSintactico.py',147),
  ('factor -> ENTERO','factor',1,'p_factor2','analizadorSintactico.py',148),
  ('factor -> DECIMAL','factor',1,'p_factor2','analizadorSintactico.py',149),
  ('factor -> STR','factor',1,'p_factor6','analizadorSintactico.py',157),
  ('factor -> empty','factor',1,'p_factorEmpty','analizadorSintactico.py',162),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',168),
]
